# Generated by Django 2.1.7 on 2019-03-16 21:17

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields
import piony.models.util
import piony.models.zyczenia
import uuid


class Migration(migrations.Migration):

    replaces = [('piony', '0001_initial'), ('piony', '0002_auto_20190316_2143'), ('piony', '0003_auto_20190316_2217')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Grafik',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.UUID('67852284-7f68-4664-9fa6-ecc89df4d617'), editable=False, unique=True)),
                ('miesiac', models.DateField()),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='piony.Grafik')),
            ],
        ),
        migrations.CreateModel(
            name='Pion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rodzaj', models.IntegerField(choices=[(None, 'żaden'), (1, 'dzienny'), (2, 'nocny/świąteczny'), (3, 'poza pracą')], db_index=True, default=None, null=True)),
                ('nazwa', models.CharField(db_index=True, max_length=50, unique=True)),
                ('priorytet', models.PositiveSmallIntegerField(db_index=True, default=5)),
                ('sort', models.PositiveSmallIntegerField(default=0)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='piony.Pion', verbose_name='Pion nadrzędny')),
            ],
            options={
                'verbose_name_plural': 'piony',
                'ordering': ['sort'],
            },
        ),
        migrations.CreateModel(
            name='Priorytet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateField(db_index=True)),
                ('koniec', models.DateField(db_index=True)),
                ('priorytet', models.PositiveSmallIntegerField(default=50, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(1)])),
                ('adnotacja', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'priorytet',
                'verbose_name_plural': 'priorytety',
            },
        ),
        migrations.CreateModel(
            name='Urlop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateField()),
                ('koniec', models.DateField()),
                ('rodzaj', models.CharField(choices=[('wypoczynkowy', 'wypoczynkowy'), ('szkoleniowy', 'szkoleniowy'), ('na żądanie', 'na żądanie'), ('L4', 'zwolnienie lekarskie'), ('opieka', 'na opiekę'), ('inny', 'inny')], max_length=100)),
            ],
            options={
                'verbose_name': 'urlop',
                'verbose_name_plural': 'urlopy',
            },
        ),
        migrations.CreateModel(
            name='Wolne',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dzien', models.DateField(db_index=True)),
                ('przyczyna', models.CharField(max_length=100)),
                ('grafik', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='piony.Grafik')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Wpis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dzien', models.DateField(db_index=True)),
                ('template', models.TextField(blank=True, default=None, help_text='{{user.last_name}} {{user.first_name|first|capfirst}}', null=True)),
                ('grafik', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='piony.Grafik')),
                ('pion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='piony.Pion')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'wpisy',
            },
        ),
        migrations.CreateModel(
            name='ZyczeniaOgolne',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adnotacja', models.CharField(blank=True, max_length=50, null=True)),
                ('rodzaj_pionu', models.PositiveSmallIntegerField(blank=True, choices=[(None, 'każdy'), (1, 'dzienny'), (2, 'nocny/świąteczny')], null=True)),
                ('start', models.DateField(blank=True, null=True, verbose_name='Początek')),
                ('koniec', models.DateField(blank=True, null=True, verbose_name='Koniec')),
                ('dzien_1', models.BooleanField(default=True, verbose_name='Pon.')),
                ('dzien_2', models.BooleanField(default=True, verbose_name='Wt.')),
                ('dzien_3', models.BooleanField(default=True, verbose_name='Śr.')),
                ('dzien_4', models.BooleanField(default=True, verbose_name='Czw.')),
                ('dzien_5', models.BooleanField(default=True, verbose_name='Pt.')),
                ('dzien_6', models.BooleanField(default=True, verbose_name='Sob.')),
                ('dzien_7', models.BooleanField(default=True, verbose_name='Nie.')),
                ('dostepny', models.BooleanField(default=True, verbose_name='Dostępny/a')),
                ('ilosc_zastosowan', models.PositiveSmallIntegerField(blank=True, default=None, help_text="Ile razy ta reguła ma być spełniona podczas trwania jej czasokresu. Czyli np. 'maksymalnie 2 dyżury od 1go do 15go'. ", null=True, verbose_name='Ilość zastosowań')),
            ],
            options={
                'verbose_name': 'życzenie ogólne',
                'verbose_name_plural': 'życzenia ogólne',
            },
        ),
        migrations.CreateModel(
            name='ZyczeniaPracownika',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dniowka_co_ile_dni', models.PositiveIntegerField(default=1, verbose_name='Jest w stanie wziąć dniówkę co tyle dni od ostatniej')),
                ('dyzur_co_ile_dni', models.PositiveIntegerField(default=2, verbose_name='Jest w stanie wziąć dyżur co tyle dni od ostatniego ciągu pracy')),
                ('maks_godzin_ciaglej_pracy', models.PositiveIntegerField(default=24, verbose_name='Maksymalna ilość godzin ciągłej pracy')),
                ('min_odpoczynek_po_ciaglej_pracy', models.PositiveIntegerField(default=11, verbose_name='Czas bez pracy po godzinach ciągłej pracy')),
                ('priorytet_bazowy', models.PositiveSmallIntegerField(default=50)),
                ('maks_dobowe', models.PositiveSmallIntegerField(blank=True, default=None, null=True, verbose_name='Maks. dobowych')),
                ('maks_zwykle', models.PositiveSmallIntegerField(blank=True, default=None, null=True, verbose_name='Maks. zwykłych')),
                ('specjalizacja', models.SmallIntegerField(choices=[(None, 'żaden'), (0, 'rezydent'), (1, 'jedynkowicz'), (2, 'specjalista')], default=None, null=True)),
                ('emeryt', models.BooleanField(default=False)),
                ('dozwolone_piony', mptt.fields.TreeManyToManyField(related_name='_zyczeniapracownika_dozwolone_piony_+', to='piony.Pion')),
                ('nie_dyzuruje_z', models.ManyToManyField(blank=True, related_name='_zyczeniapracownika_nie_dyzuruje_z_+', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'życzenia pracownika',
                'verbose_name_plural': 'życzenia pracowników',
            },
        ),
        migrations.CreateModel(
            name='ZyczeniaSzczegolowe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adnotacja', models.CharField(blank=True, max_length=50, null=True)),
                ('rodzaj_pionu', models.PositiveSmallIntegerField(blank=True, choices=[(None, 'każdy'), (1, 'dzienny'), (2, 'nocny/świąteczny')], null=True)),
                ('miesiac_i_rok', models.DateField(default=piony.models.zyczenia.next_month)),
                ('lista_dni', models.CharField(max_length=200, validators=[piony.models.util.lista_dni])),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='piony.ZyczeniaPracownika')),
                ('pion', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='piony.Pion')),
            ],
            options={
                'verbose_name': 'życzenie szczegółówe',
                'verbose_name_plural': 'życzenia szczegółowe',
            },
        ),
        migrations.AddField(
            model_name='zyczeniaogolne',
            name='parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='piony.ZyczeniaPracownika'),
        ),
        migrations.AddField(
            model_name='zyczeniaogolne',
            name='pion',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='piony.Pion'),
        ),
        migrations.AddField(
            model_name='urlop',
            name='parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='piony.ZyczeniaPracownika'),
        ),
        migrations.AddField(
            model_name='priorytet',
            name='parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='piony.ZyczeniaPracownika'),
        ),
        migrations.AddField(
            model_name='priorytet',
            name='piony',
            field=mptt.fields.TreeManyToManyField(related_name='_priorytet_piony_+', to='piony.Pion'),
        ),
        migrations.AlterUniqueTogether(
            name='wpis',
            unique_together={('user', 'dzien', 'pion')},
        ),
        migrations.CreateModel(
            name='PrzerwaWPracyPionu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateField()),
                ('koniec', models.DateField()),
                ('przyczyna', models.CharField(default='nie pracuje', max_length=50)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='piony.Pion')),
            ],
            options={
                'verbose_name': 'przerwa w pracy pionu',
                'verbose_name_plural': 'przerwy w pracy pionu',
            },
        ),
        migrations.AlterField(
            model_name='grafik',
            name='uuid',
            field=models.UUIDField(default=uuid.UUID('9dab0eea-409e-413b-b0cf-641a37b04545'), editable=False, unique=True),
        ),
        migrations.AddField(
            model_name='zyczeniapracownika',
            name='maks_dniowki',
            field=models.PositiveSmallIntegerField(blank=True, default=None, null=True, verbose_name='Maks. dniówek'),
        ),
        migrations.AlterField(
            model_name='grafik',
            name='uuid',
            field=models.UUIDField(default=uuid.UUID('d677124e-bc17-4151-ab89-ca32f25ee3c1'), editable=False, unique=True),
        ),
    ]
