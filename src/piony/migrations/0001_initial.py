# Generated by Django 2.1.7 on 2019-03-15 16:31

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields
import piony.models.grafik


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='DostepnoscPracownika',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dostepny', models.BooleanField(default=True, verbose_name='Dostępny/a')),
                ('adnotacja', models.CharField(max_length=100, verbose_name='Adnotacja')),
                ('rodzaj_pionu', models.PositiveSmallIntegerField(blank=True, choices=[(None, 'każdy'), (1, 'dzienny'), (2, 'nocny/świąteczny')], null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rodzaj', models.IntegerField(choices=[(None, 'żaden'), (1, 'dzienny'), (2, 'nocny/świąteczny'), (3, 'poza pracą')], db_index=True, default=None, null=True)),
                ('nazwa', models.CharField(db_index=True, max_length=50, unique=True)),
                ('priorytet', models.PositiveSmallIntegerField(db_index=True, default=5)),
                ('sort', models.PositiveSmallIntegerField(default=0)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='piony.Pion', verbose_name='Pion nadrzędny')),
            ],
            options={
                'verbose_name_plural': 'piony',
                'ordering': ['sort'],
            },
        ),
        migrations.CreateModel(
            name='Wpis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dzien', models.DateField(db_index=True)),
                ('pion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='piony.Pion')),
            ],
            options={
                'verbose_name_plural': 'wpisy',
            },
            bases=(piony.models.grafik.RenderowalnyElementGrafikaMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Wpis_Template',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazwa', models.CharField(max_length=50, unique=True)),
                ('template', models.TextField(default='{{user.last_name}} {{user.first_name|first|capfirst}}')),
            ],
        ),
        migrations.CreateModel(
            name='ZakresDat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateField(blank=True, null=True, verbose_name='Początek')),
                ('koniec', models.DateField(blank=True, null=True, verbose_name='Koniec')),
                ('dzien_1', models.BooleanField(default=True, verbose_name='Pon.')),
                ('dzien_2', models.BooleanField(default=True, verbose_name='Wt.')),
                ('dzien_3', models.BooleanField(default=True, verbose_name='Śr.')),
                ('dzien_4', models.BooleanField(default=True, verbose_name='Czw.')),
                ('dzien_5', models.BooleanField(default=True, verbose_name='Pt.')),
                ('dzien_6', models.BooleanField(default=True, verbose_name='Sob.')),
                ('dzien_7', models.BooleanField(default=True, verbose_name='Nie.')),
                ('ilosc_zastosowan', models.PositiveSmallIntegerField(blank=True, default=None, help_text="Ile razy ta reguła ma być spełniona podczas trwania jej czasokresu. Czyli np. 'maksymalnie 2 dyżury od 1go do 15go'. ", null=True, verbose_name='Ilość zastosowań')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='piony.DostepnoscPracownika')),
            ],
        ),
        migrations.CreateModel(
            name='Pracownik',
            fields=[
            ],
            options={
                'verbose_name_plural': 'pracownicy',
                'proxy': True,
                'indexes': [],
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='wpis',
            name='template',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='piony.Wpis_Template'),
        ),
        migrations.AddField(
            model_name='wpis',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='dostepnoscpracownika',
            name='daty',
            field=models.ManyToManyField(to='piony.ZakresDat'),
        ),
        migrations.AddField(
            model_name='dostepnoscpracownika',
            name='piony',
            field=models.ManyToManyField(blank=True, related_name='_dostepnoscpracownika_piony_+', to='piony.Pion'),
        ),
        migrations.AddField(
            model_name='dostepnoscpracownika',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='wpis',
            unique_together={('user', 'dzien', 'pion')},
        ),
    ]
